# RDB持久化概念

Redis是一个键值对数据库，他高效的原因是因为将所有数据都保存在内存中。所以如果没有一种机制将内存中的数据，保存在硬盘上，那么数据就会丢失。
常见的有两种持久化机制。一种是RDB，就是将某个时间节点的数据库状态保存到一个RDB文件中，然后当服务器再次启动的时候，读取RDB文件，恢复redis上次中止前的状态

# RDB实现
## RDB文件结构
采取头+版本号+内容+EOF终止符+check_sum这样的一种格式保存
内容部分采用selectdb + 数据库编号+ pairs的格式。
pairs采用过期时间标志+过期时间+type+key+value的格式
value的编码采取len+value的形式。如果启用压缩功能则采取compressedlen+originlen+compressedcontent的格式
## 写出RDB文件
## 写入RDB文件

# AOF持久化概念
AOF持久化是通过记录所有向数据库输入的指令来实现，来记录服务器的状态。
简单来说就是每输入一条指令，就将其写入一个缓冲区，然后然后采取一定的策略刷出，可以是定时刷出，可以是定size输出。最终保存在一个AOF文件里面。
# AOF实现
1）在启动redis服务器的时候，创建一个不带网络连接的伪客户端，
2）从AOF文件中读取一条指令，然后发送给服务器
重复执行步骤1、2.知道所有指令执行完毕。
## AOF重写
当保存的命令越来越多的时候，AOF文件越来越大，所以就有优化的必要了，思路是合并一些可以合并的命令。
这里面为了保证AOF文件重写时候的性能，采取单开一个子进程这样的方式。
为什么是开子进程而不是线程？
为了减少锁争用，保证数据的安全。
具体实现是

